name: SSH smoke test

on:
  workflow_dispatch: {}                  # manuel
  push:                                  # auto -> dossier ciblÃ© change
    branches: [ main ]
    paths:
      - 'sentinel/**'
      - '.github/workflows/ssh-smoke.yml'

concurrency:
  group: ssh-smoke-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ssh-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Run command on remote with password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            echo "Connected!"
            hostname
            whoami
            ls -la

      - name: Bootstrap server (idempotent)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            set -euo pipefail
            export DEBIAN_FRONTEND=noninteractive
            
            echo "==> APT update/upgrade"
            apt-get update -y
            apt-get upgrade -y || true
            apt-get install -y ca-certificates curl gnupg lsb-release rsync jq
            
            echo "==> Install Docker Engine + Compose v2 if missing"
            if ! command -v docker >/dev/null 2>&1; then
              install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              chmod a+r /etc/apt/keyrings/docker.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
      https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) stable" \
      > /etc/apt/sources.list.d/docker.list
      apt-get update -y
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      systemctl enable --now docker
      fi
      
      echo "==> Docker versions"
      docker --version
      docker compose version
      
      
      echo "==> Done."

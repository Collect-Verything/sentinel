version: "3.9"

services:
  # =========================
  # DEV
  # =========================

  client-dev:
    profiles: ["dev"]
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    container_name: sentinel-front-dev
    ports:
      - "5173:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - sentinel-front

  back-dev:
    profiles: [ "dev" ]
    build:
      context: ./back
      dockerfile: Dockerfile.dev
    container_name: back-dev
    restart: always
    env_file:
      - ./back/.env
    volumes:
      - ./back:/back
      - /back/node_modules
    ports:
      - "3001:3001"
    depends_on:
      mysql-sentinel:
        condition: service_healthy

  mysql-sentinel:
    profiles: ["dev"]
    image: mysql:8
    container_name: mysql-sentinel
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: sentinel_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-sentinel-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-ppassword" ]
      interval: 5s
      timeout: 3s
      retries: 5

  # =========================
  # PROD
  # =========================
  client:
    profiles: ["prod"]
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: sentinel-front-app
    ports:
      - "80:80"
    networks:
      - sentinel-front
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s


volumes:
  mysql-sentinel-data:

networks:
  sentinel-front:
    driver: bridge
